service: florify-auth

provider:
  name: aws
  runtime: python3.9
  region: eu-north-1
  environment:
    CLIENT_ID: 76i7it21omdm3n80nf9j9dc2oc
    USER_POOL_ID: eu-north-1_i7vhr8PxH
    GARDENS_TABLE_NAME: ${self:service}-gardens-${self:provider.stage}
    S3_BUCKET_NAME: ${self:service}-garden-images-${self:provider.stage}
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - cognito-idp:SignUp
            - cognito-idp:ConfirmSignUp
            - cognito-idp:ResendConfirmationCode
            - cognito-idp:InitiateAuth
          Resource: "*"
        - Effect: "Allow"
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: 
            - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:service}-gardens-${self:provider.stage}"
            - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:service}-gardens-${self:provider.stage}/index/*"
        - Effect: "Allow"
          Action:
            - s3:GetObject
            - s3:PutObject
            - s3:DeleteObject
          Resource: "arn:aws:s3:::${self:service}-garden-images-${self:provider.stage}/*"

  httpApi:
    cors:
      allowedOrigins:
        - "http://localhost:5173"
        - "*"  # you can remove this after testing
      allowedHeaders:
        - Content-Type
        - Authorization
      allowedMethods:
        - GET
        - POST
        - PUT
        - DELETE
        - OPTIONS
      allowCredentials: false

functions:
  signup:
    handler: signup_handler.handler
    events:
      - httpApi:
          path: /signup
          method: post

  confirm:
    handler: confirm_handler.handler
    events:
      - httpApi:
          path: /confirm
          method: post

  resend:
    handler: resend_handler.handler
    events:
      - httpApi:
          path: /resend
          method: post

  login:
    handler: login_handler.handler
    events:
      - httpApi:
          path: /login
          method: post

  gardens:
    handler: gardens_handler.handler
    events:
      - httpApi:
          path: /gardens
          method: get
      - httpApi:
          path: /gardens
          method: post

resources:
  Resources:
    GardensTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-gardens-${self:provider.stage}
        AttributeDefinitions:
          - AttributeName: gardenId
            AttributeType: S
          - AttributeName: userEmail
            AttributeType: S
        KeySchema:
          - AttributeName: gardenId
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: UserEmailIndex
            KeySchema:
              - AttributeName: userEmail
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST

    GardenImagesBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:service}-garden-images-${self:provider.stage}
        CorsConfiguration:
          CorsRules:
            - AllowedHeaders: ['*']
              AllowedMethods: [GET, PUT, POST, DELETE, HEAD]
              AllowedOrigins: ['*']
              MaxAge: 3000

plugins:
  - serverless-python-requirements

package:
  exclude:
    - node_modules/**
    - .venv/**
